apiVersion: v1
kind: Namespace
metadata:
  name: todo-app
  labels:
    app: todo-app
    environment: production
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: todo-app-sa
  namespace: todo-app
  labels:
    app: todo-app
---
apiVersion: v1
kind: Secret
metadata:
  name: todo-app-secrets
  namespace: todo-app
  labels:
    app: todo-app
type: Opaque
data:
  # Hardcoded secrets (base64 encoded)
  api-url: aHR0cDovL2xvY2FsaG9zdDozMDAw
  jwt-secret: bXktc2VjcmV0LWtleQ==
  database-url: cG9zdGdkdGYzXnbDoVL3VzZXIx6cGFzc0Bsb2NhbGhvc3Q6NTQzMiMi9kYg==
  redis-url: cmVkaXM6Ly9sb2NhbGhvc3Q6MzczOQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: todo-app-config
  namespace: todo-app
  labels:
    app: todo-app
data:
  NODE_ENV: "production"
  PORT: "3000"
  LOG_LEVEL: "debug"
  DEBUG: "*"
  API_URL: "http://localhost:3001"
  DATABASE_URL: "postgresql://user:pass@localhost:5432/db"
  REDIS_URL: "redis://localhost:6379"
  JWT_SECRET: "my-secret-key"
  REACT_APP_API_URL: "http://localhost:3001"
  REACT_APP_DEBUG: "true"
  REACT_APP_VERBOSE: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app-frontend
  namespace: todo-app
  labels:
    app: todo-app
    component: frontend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: todo-app
      component: frontend
  template:
    metadata:
      labels:
        app: todo-app
        component: frontend
    spec:
      serviceAccountName: todo-app-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 0
        fsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: frontend
        image: karishvarshney/todo-frontend-new:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        - containerPort: 3001
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "development"
        - name: PORT
          value: "3000"
        - name: DEBUG
          value: "*"
        - name: LOG_LEVEL
          value: "debug"
        - name: REACT_APP_API_URL
          value: "http://localhost:3001"
        - name: REACT_APP_DEBUG
          value: "true"
        - name: REACT_APP_VERBOSE
          value: "true"
        - name: GENERATE_SOURCEMAP
          value: "true"
        envFrom:
        - configMapRef:
            name: todo-app-config
        - secretRef:
            name: todo-app-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 30
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        - name: dev-shm
          mountPath: /dev/shm
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-tmp
        emptyDir: {}
      - name: dev-shm
        emptyDir: {}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app-backend
  namespace: todo-app
  labels:
    app: todo-app
    component: backend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: todo-app
      component: backend
  template:
    metadata:
      labels:
        app: todo-app
        component: backend
    spec:
      containers:
      - name: backend
        image: karishvarshney/todo-backend-new:latest
        ports:
        - containerPort: 3001
          protocol: TCP
        - containerPort: 3002
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        - containerPort: 9000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "development"
        - name: PORT
          value: "3001"
        - name: DEBUG
          value: "*"
        - name: LOG_LEVEL
          value: "debug"
        - name: API_URL
          value: "http://localhost:3001"
        - name: DATABASE_URL
          value: "postgresql://user:pass@localhost:5432/db"
        - name: REDIS_URL
          value: "redis://localhost:6379"
        - name: JWT_SECRET
          value: "my-secret-key"
        envFrom:
        - configMapRef:
            name: todo-app-config
        - secretRef:
            name: todo-app-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        - name: dev-shm
          mountPath: /dev/shm
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-tmp
        emptyDir: {}
      - name: dev-shm
        emptyDir: {}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: Service
metadata:
  name: todo-app-frontend-service
  namespace: todo-app
  labels:
    app: todo-app
    component: frontend
spec:
  type: NodePort
  ports:
  - name: http-3000
    port: 3000
    targetPort: 3000
    nodePort: 30000
    protocol: TCP
  - name: http-3001
    port: 3001
    targetPort: 3001
    nodePort: 30001
    protocol: TCP
  - name: http-8080
    port: 8080
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
  - name: http-80
    port: 80
    targetPort: 80
    nodePort: 30081
    protocol: TCP
  - name: http-443
    port: 443
    targetPort: 443
    nodePort: 30443
    protocol: TCP
  selector:
    app: todo-app
    component: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: todo-app-backend-service
  namespace: todo-app
  labels:
    app: todo-app
    component: backend
spec:
  type: NodePort
  ports:
    - name: http-3001
      port: 3001
      targetPort: 3001
      nodePort: 30002
      protocol: TCP
    - name: http-3002
      port: 3002
      targetPort: 3002
      nodePort: 30003
      protocol: TCP
    - name: http-8080
      port: 8080
      targetPort: 8080
      nodePort: 30083
      protocol: TCP
    - name: http-9000
      port: 9000
      targetPort: 9000
      nodePort: 30900
      protocol: TCP
  selector:
    app: todo-app
    component: backend
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: todo-app-network-policy
  namespace: todo-app
spec:
  podSelector:
    matchLabels:
      app: todo-app
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: kube-system
        - namespaceSelector:
            matchLabels:
              name: default
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: todo-app
        - podSelector:
            matchLabels:
              app: todo-app
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
        - namespaceSelector:
            matchLabels:
              name: default
        - namespaceSelector:
            matchLabels:
              name: todo-app
        - podSelector:
            matchLabels:
              app: todo-app
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 5432
        - protocol: TCP
          port: 6379
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: todo-app-pdb
  namespace: todo-app
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: todo-app
      component: frontend
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: todo-app-pvc
  namespace: todo-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: todo-app-ingress
  namespace: todo-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  rules:
    - host: todo-app.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: todo-app-frontend-service
                port:
                  number: 3000
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: todo-app-backend-service
                port:
                  number: 3001
